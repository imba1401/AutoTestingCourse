package src.day7;

/*2. Дворовый футбол.
        Для игры в футбол во дворе требуется 6 человек (3х3). Класс Игрок (англ. Player),
        содержит следующие поля:
        - поле “выносливость” (англ. stamina), разное для каждого экземпляра
        - константы “максимальная выносливость” (англ. MAX_STAMINA) со значением
        100 и “минимальная выносливость” (англ. MIN_STAMINA) со значением 0,
        единые для всех экземпляров
        - статическое поле countPlayers, которое считает количество игроков на
        футбольном поле (изначально их 0, выходом на поле считается создание
        экземпляра класса, уходом - когда игрок устал).
        - геттер для поля “выносливость”
        и следующие методы:
        run() - Игрок бежит при вызове этого метода. Этот метод уменьшает выносливость
        на 1 при однократном вызове. Когда выносливость достигает 0, игроку нужен отдых и
        он уходит с поля.
        info() - выводит сообщение в зависимости от количества игроков на поле. Если
        игроков меньше 6, то выводит сообщение: “Команды неполные. На поле еще есть ...
        свободных мест”, иначе: “На поле нет свободных мест”. Грамматикой русского языка
        пренебречь, т.е. фраза “еще есть 1 свободных мест” допустима.
        Задание: Создать класс Player по вышеописанному шаблону. Экземпляр класса при
        создании должен иметь значение выносливости от 90 до 100 (генерировать внутри
        конструктора). Создать 6 игроков, вызвать метод info(). При попытке создать 7,8 ...
        n игрока, количество игроков на поле меняться не должно, проверить это.
        Примените к игроку метод run(), пока он полностью не выдохнется (отрицательное
        значение выносливости не допускается). Вывести количество игроков на поле.

        *По желанию: доработать метод info() так, чтобы при выводе в консоль грамматика
        русского языка учитывалась.*/

public class Task2 {
    public static void main(String[] args) {
        Player a1 = new Player();
        Player a2 = new Player();
        Player a3 = new Player();
        Player a4 = new Player();
        Player a5 = new Player();
        Player a6 = new Player();
        Player a7 = new Player();
        Player a8 = new Player();
        System.out.println("колво игроков " + Player.countPlayers); // вывод общего количества игроков, в тч проверка при количестве игроков больше 6
        Player.info(); // вывод сколько свободных мест вначале

        a1.run(a1);a1.run(a1);a1.run(a1);a1.run(a1);a1.run(a1);a1.run(a1);a1.run(a1);a1.run(a1);a1.run(a1);//8
        a2.run(a2);a2.run(a2);a2.run(a2);a2.run(a2);a2.run(a2);a2.run(a2);a2.run(a2);a2.run(a2);a2.run(a2);a2.run(a2);//9
        a3.run(a3);a3.run(a3);a3.run(a3);a3.run(a3);a3.run(a3);a3.run(a3);a3.run(a3);a3.run(a3);a3.run(a3);//8
        a4.run(a4);a4.run(a4);a4.run(a4);a4.run(a4);a4.run(a4);a4.run(a4);a4.run(a4);a4.run(a4);a4.run(a4);//9
        a5.run(a5);a5.run(a5);a5.run(a5);a5.run(a5);a5.run(a5);a5.run(a5);a5.run(a5);a5.run(a5);a5.run(a5);//8
        a6.run(a6);a6.run(a6);a6.run(a6);a6.run(a6);a6.run(a6);a6.run(a6);a6.run(a6);a6.run(a6);
        System.out.println(a1.getStamina());
        System.out.println(a2.getStamina());
        System.out.println(a3.getStamina());
        System.out.println(a4.getStamina());
        System.out.println(a5.getStamina());
        System.out.println(a6.getStamina());

        System.out.println("колво игроков " + Player.countPlayers);// вывод оставшегося количества игроков
        Player.info(); // вывод сообщения
    }
}
